library(dplyr)
library(neuralnet)
library(Metrics)
library(caret)
library(reshape)
#--------------Load Data----------------
Ab=read.csv("/Users/user2/Desktop/Rstudio workspace/Absenteeism_at_work.csv")
Ab=Ab[,-1]

#-----------Scale data----------------
range <- function(x){(x-min(x))/(max(x)-min(x))}
Ab <- Ab %>%mutate_if(is.numeric, range)

#---------Split data--------------------
set.seed(1)  
train.index <- sample(row.names(Ab), 0.8*dim(Ab)[1])  
train.df <- Ab[train.index,]
rest.index = setdiff(row.names(Ab), train.index)
valid.df <- Ab[rest.index,]  
S=read.csv("/Users/user2/Desktop/Rstudio workspace/Absenteeism_at_work.csv")
#------NN with 1 layers and four nodes---------
FN <- neuralnet(Absenteeism.time.in.hours ~ ., data = train.df,linear.output = TRUE,hidden = 4)
options(scipen=999, digits = 4)
# plot network
plot(FN, rep="best")
#RMSE training and validation sets
predT <- compute(FN, train.df)$net.result
A1=rmse(((train.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
accuracy(train.df$Absenteeism.time.in.hours,predT)
predT <- compute(FN, valid.df)$net.result
A2=rmse(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
accuracy(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
# predT=120*predT
plot( valid.df$Absenteeism.time.in.hours,predT, col = "red",
      main = 'Real vs Predicted')
abline(0, 1, lwd = 2)

boxplot(predT-valid.df$Absenteeism.time.in.hours)

#------NN with 2 layers and four nodes---------
FN <- neuralnet(Absenteeism.time.in.hours ~ ., data = train.df,linear.output = TRUE,hidden = c(4,4))
options(scipen=999, digits = 4)
# plot network
plot(FN, rep="best")
#RMSE training and validation sets
predT <- compute(FN, train.df)$net.result
B1=rmse(((train.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))

predT <- compute(FN, valid.df)$net.result
B2=rmse(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
accuracy(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))

# predT=120*predT
plot( valid.df$Absenteeism.time.in.hours,predT, col = "red",
     main = 'Real vs Predicted')
abline(0, 1, lwd = 2)

boxplot(predT-valid.df$Absenteeism.time.in.hours)
#NN with two layers performs better on the data

#-------NN with 2 layers of 7 nodes------
FN <- neuralnet(Absenteeism.time.in.hours ~ ., data = train.df,linear.output = TRUE,hidden = c(7,7))
options(scipen=999, digits = 4)
# plot network
plot(FN, rep="best")
#RMSE training and validation sets
predT <- compute(FN, train.df)$net.result
c1=rmse(((train.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
predT <- compute(FN, valid.df)$net.result
c2=rmse(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))
accuracy(((valid.df$Absenteeism.time.in.hours)*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours),(predT*(max(S$Absenteeism.time.in.hours)-min(S$Absenteeism.time.in.hours)))+min(S$Absenteeism.time.in.hours))

plot( valid.df$Absenteeism.time.in.hours,predT, col = "red",
     main = 'Real vs Predicted')
abline(0, 1, lwd = 2)

boxplot(predT-valid.df$Absenteeism.time.in.hours)

rmsenn.df <- data.frame(neurons = c("1,4","2,4","2,7"), training = c(A1,B1,c1), validation = c(A2, B2, c2))

rmsenn.df.melt <- melt(rmsenn.df)
rmsenn.plot <- ggplot(rmsenn.df.melt, aes(x=neurons, y=value, fill=variable)) + geom_bar(position="dodge", stat="identity") + ggtitle("Root mean square error (RMSE)") + theme_classic() 

rmsenn.plot

